const express=require('express'); const router=express.Router();
const { requireApiKey, protect } = require('../middleware/authMiddleware');
const ctrl = require('../controllers/productController');
router.post('/', requireApiKey, protect, ctrl.createProduct);
router.get('/', requireApiKey, ctrl.list);
router.get('/search', requireApiKey, ctrl.search);
router.get('/featured', requireApiKey, ctrl.featured);
router.get('/:id', requireApiKey, ctrl.get);
router.put('/:id', requireApiKey, protect, ctrl.update);
router.delete('/:id', requireApiKey, protect, ctrl.delete);
router.get('/:id/inventory', requireApiKey, ctrl.getInventory);
router.put('/:id/inventory', requireApiKey, protect, ctrl.updateInventory);
router.post('/:id/variants', requireApiKey, protect, ctrl.addVariant);
router.get('/:id/variants', requireApiKey, ctrl.getVariants);
router.put('/:id/variants/:variantId', requireApiKey, protect, ctrl.updateVariant);
router.delete('/:id/variants/:variantId', requireApiKey, protect, ctrl.deleteVariant);
router.post('/:id/reviews', requireApiKey, protect, ctrl.addReview);
router.get('/:id/reviews', requireApiKey, ctrl.getReviews);
router.put('/:id/reviews/:reviewId', requireApiKey, protect, ctrl.updateReview);
router.delete('/:id/reviews/:reviewId', requireApiKey, protect, ctrl.deleteReview);
router.post('/:id/images', requireApiKey, protect, async (req,res)=>{ try{ const p = await require('../models/productModel').findById(req.params.id); if(!p) return res.status(404).end(); p.imageUrls = p.imageUrls.concat(req.body.imageUrls||[]); await p.save(); res.json(p);}catch(e){res.status(500).json({message:e.message})}});
router.get('/:id/images', requireApiKey, async (req,res)=>{ const p = await require('../models/productModel').findById(req.params.id); res.json(p? p.imageUrls : []); });
router.delete('/:id/images/:imageIndex', requireApiKey, protect, async (req,res)=>{ try{ const p = await require('../models/productModel').findById(req.params.id); if(!p) return res.status(404).end(); p.imageUrls.splice(parseInt(req.params.imageIndex),1); await p.save(); res.json(p);}catch(e){res.status(500).json({message:e.message})} });
module.exports = router;
